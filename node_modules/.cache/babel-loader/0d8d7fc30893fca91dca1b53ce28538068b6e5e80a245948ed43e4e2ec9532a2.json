{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import\"./RabbitGame.css\";import rabbitImg from\"../assets/rabbit.png\";import obstacleImg from\"../assets/obstacle.png\";import jumpSoundFile from\"../assets/jump.mp3\";import gameOverSoundFile from\"../assets/gameover.mp3\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const RabbitGame=()=>{const[jumping,setJumping]=useState(false);const[score,setScore]=useState(0);const[gameOver,setGameOver]=useState(false);const[audioUnlocked,setAudioUnlocked]=useState(false);const rabbitRef=useRef(null);const obstacleRef=useRef(null);const jumpSound=useRef(new Audio(jumpSoundFile));const gameOverSound=useRef(new Audio(gameOverSoundFile));// Unlock audio on first interaction\nuseEffect(()=>{const unlockAudio=()=>{jumpSound.current.play().catch(()=>{});jumpSound.current.pause();jumpSound.current.currentTime=0;gameOverSound.current.play().catch(()=>{});gameOverSound.current.pause();gameOverSound.current.currentTime=0;setAudioUnlocked(true);window.removeEventListener(\"keydown\",unlockAudio);window.removeEventListener(\"touchstart\",unlockAudio);};window.addEventListener(\"keydown\",unlockAudio);window.addEventListener(\"touchstart\",unlockAudio);return()=>{window.removeEventListener(\"keydown\",unlockAudio);window.removeEventListener(\"touchstart\",unlockAudio);};},[]);// Jump action\nconst handleJump=()=>{if(!jumping&&!gameOver){setJumping(true);if(audioUnlocked)jumpSound.current.play().catch(()=>{});setTimeout(()=>setJumping(false),500);}};// Collision detection and score\nuseEffect(()=>{const interval=setInterval(()=>{if(!rabbitRef.current||!obstacleRef.current)return;const obstacleLeft=obstacleRef.current.offsetLeft;const rabbitBottom=jumping?150:0;if(obstacleLeft<100&&obstacleLeft>50&&rabbitBottom<50){if(audioUnlocked)gameOverSound.current.play().catch(()=>{});setGameOver(true);clearInterval(interval);}if(obstacleLeft<=0&&!gameOver){setScore(prev=>prev+1);}},50);return()=>clearInterval(interval);},[jumping,gameOver,audioUnlocked]);// Spacebar jump\nuseEffect(()=>{const handleKeyDown=e=>{if(e.code===\"Space\")handleJump();};window.addEventListener(\"keydown\",handleKeyDown);return()=>{window.removeEventListener(\"keydown\",handleKeyDown);};},[jumping,gameOver,audioUnlocked]);// Reset game\nconst resetGame=()=>{setScore(0);setGameOver(false);};return(/*#__PURE__*/// Attach touch event directly to container\n_jsxs(\"div\",{className:\"game-container\",onTouchStart:handleJump,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score\",children:[\"Score: \",score]}),/*#__PURE__*/_jsx(\"div\",{ref:rabbitRef,className:\"rabbit \".concat(jumping?\"jump\":\"\"),style:{backgroundImage:\"url(\".concat(rabbitImg,\")\")}}),!gameOver&&/*#__PURE__*/_jsx(\"div\",{ref:obstacleRef,className:\"obstacle\",style:{backgroundImage:\"url(\".concat(obstacleImg,\")\"),animationDuration:\"\".concat(Math.max(1.2,2-score*0.05),\"s\")}}),gameOver&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-over\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Game Over!\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Your Score: \",score]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,children:\"Restart\"})]})]}));};export default RabbitGame;","map":{"version":3,"names":["React","useState","useEffect","useRef","rabbitImg","obstacleImg","jumpSoundFile","gameOverSoundFile","jsxs","_jsxs","jsx","_jsx","RabbitGame","jumping","setJumping","score","setScore","gameOver","setGameOver","audioUnlocked","setAudioUnlocked","rabbitRef","obstacleRef","jumpSound","Audio","gameOverSound","unlockAudio","current","play","catch","pause","currentTime","window","removeEventListener","addEventListener","handleJump","setTimeout","interval","setInterval","obstacleLeft","offsetLeft","rabbitBottom","clearInterval","prev","handleKeyDown","e","code","resetGame","className","onTouchStart","children","ref","concat","style","backgroundImage","animationDuration","Math","max","onClick"],"sources":["D:/React project/rabbit-jump/src/components/RabbitGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./RabbitGame.css\";\r\nimport rabbitImg from \"../assets/rabbit.png\";\r\nimport obstacleImg from \"../assets/obstacle.png\";\r\nimport jumpSoundFile from \"../assets/jump.mp3\";\r\nimport gameOverSoundFile from \"../assets/gameover.mp3\";\r\n\r\nconst RabbitGame = () => {\r\n  const [jumping, setJumping] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [audioUnlocked, setAudioUnlocked] = useState(false);\r\n\r\n  const rabbitRef = useRef(null);\r\n  const obstacleRef = useRef(null);\r\n  const jumpSound = useRef(new Audio(jumpSoundFile));\r\n  const gameOverSound = useRef(new Audio(gameOverSoundFile));\r\n\r\n  // Unlock audio on first interaction\r\n  useEffect(() => {\r\n    const unlockAudio = () => {\r\n      jumpSound.current.play().catch(() => {});\r\n      jumpSound.current.pause();\r\n      jumpSound.current.currentTime = 0;\r\n\r\n      gameOverSound.current.play().catch(() => {});\r\n      gameOverSound.current.pause();\r\n      gameOverSound.current.currentTime = 0;\r\n\r\n      setAudioUnlocked(true);\r\n\r\n      window.removeEventListener(\"keydown\", unlockAudio);\r\n      window.removeEventListener(\"touchstart\", unlockAudio);\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", unlockAudio);\r\n    window.addEventListener(\"touchstart\", unlockAudio);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", unlockAudio);\r\n      window.removeEventListener(\"touchstart\", unlockAudio);\r\n    };\r\n  }, []);\r\n\r\n  // Jump action\r\n  const handleJump = () => {\r\n    if (!jumping && !gameOver) {\r\n      setJumping(true);\r\n      if (audioUnlocked) jumpSound.current.play().catch(() => {});\r\n      setTimeout(() => setJumping(false), 500);\r\n    }\r\n  };\r\n\r\n  // Collision detection and score\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (!rabbitRef.current || !obstacleRef.current) return;\r\n\r\n      const obstacleLeft = obstacleRef.current.offsetLeft;\r\n      const rabbitBottom = jumping ? 150 : 0;\r\n\r\n      if (obstacleLeft < 100 && obstacleLeft > 50 && rabbitBottom < 50) {\r\n        if (audioUnlocked) gameOverSound.current.play().catch(() => {});\r\n        setGameOver(true);\r\n        clearInterval(interval);\r\n      }\r\n\r\n      if (obstacleLeft <= 0 && !gameOver) {\r\n        setScore((prev) => prev + 1);\r\n      }\r\n    }, 50);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [jumping, gameOver, audioUnlocked]);\r\n\r\n  // Spacebar jump\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.code === \"Space\") handleJump();\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  }, [jumping, gameOver, audioUnlocked]);\r\n\r\n  // Reset game\r\n  const resetGame = () => {\r\n    setScore(0);\r\n    setGameOver(false);\r\n  };\r\n\r\n  return (\r\n    // Attach touch event directly to container\r\n    <div className=\"game-container\" onTouchStart={handleJump}>\r\n      <div className=\"score\">Score: {score}</div>\r\n\r\n      <div\r\n        ref={rabbitRef}\r\n        className={`rabbit ${jumping ? \"jump\" : \"\"}`}\r\n        style={{ backgroundImage: `url(${rabbitImg})` }}\r\n      ></div>\r\n\r\n      {!gameOver && (\r\n        <div\r\n          ref={obstacleRef}\r\n          className=\"obstacle\"\r\n          style={{\r\n            backgroundImage: `url(${obstacleImg})`,\r\n            animationDuration: `${Math.max(1.2, 2 - score * 0.05)}s`,\r\n          }}\r\n        ></div>\r\n      )}\r\n\r\n      {gameOver && (\r\n        <div className=\"game-over\">\r\n          <h2>Game Over!</h2>\r\n          <p>Your Score: {score}</p>\r\n          <button onClick={resetGame}>Restart</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RabbitGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}