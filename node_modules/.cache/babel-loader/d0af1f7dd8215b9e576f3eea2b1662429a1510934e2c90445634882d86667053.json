{"ast":null,"code":"var _jsxFileName = \"D:\\\\React project\\\\rabbit-jump\\\\src\\\\components\\\\RabbitGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./RabbitGame.css\";\nimport rabbitImg from \"../assets/rabbit.png\";\nimport obstacleImg from \"../assets/obstacle.png\";\nimport jumpSoundFile from \"../assets/jump.mp3\";\nimport gameOverSoundFile from \"../assets/gameover.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RabbitGame = () => {\n  _s();\n  const [jumping, setJumping] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const rabbitRef = useRef(null);\n  const obstacleRef = useRef(null);\n  const jumpSound = useRef(new Audio(jumpSoundFile));\n  const gameOverSound = useRef(new Audio(gameOverSoundFile));\n\n  // Jump action\n  const handleJump = () => {\n    if (!jumping && !gameOver) {\n      setJumping(true);\n      jumpSound.current.play();\n      setTimeout(() => setJumping(false), 500);\n    }\n  };\n\n  // Collision detection & score\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!rabbitRef.current || !obstacleRef.current) return;\n      const obstacleLeft = obstacleRef.current.getBoundingClientRect().left;\n      const rabbitBottom = jumping ? rabbitRef.current.getBoundingClientRect().bottom - 50 : 0;\n      if (obstacleLeft < window.innerWidth * 0.1 && obstacleLeft > 0 && rabbitBottom < 50) {\n        gameOverSound.current.play();\n        setGameOver(true);\n        clearInterval(interval);\n      }\n      if (obstacleLeft <= 0 && !gameOver) {\n        setScore(prev => prev + 1);\n      }\n    }, 50);\n    return () => clearInterval(interval);\n  }, [jumping, gameOver]);\n\n  // Spacebar jump\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === \"Space\") handleJump();\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  });\n\n  // Reset game\n  const resetGame = () => {\n    setScore(0);\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: rabbitRef,\n      className: `rabbit ${jumping ? \"jump\" : \"\"}`,\n      style: {\n        backgroundImage: `url(${rabbitImg})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: obstacleRef,\n      className: \"obstacle\",\n      style: {\n        backgroundImage: `url(${obstacleImg})`,\n        animationDuration: `${Math.max(1.2, 2 - score * 0.05)}s`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(RabbitGame, \"VxqAJlBicgnTIcnN5lKu52ArlDo=\");\n_c = RabbitGame;\nexport default RabbitGame;\nvar _c;\n$RefreshReg$(_c, \"RabbitGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","rabbitImg","obstacleImg","jumpSoundFile","gameOverSoundFile","jsxDEV","_jsxDEV","RabbitGame","_s","jumping","setJumping","score","setScore","gameOver","setGameOver","rabbitRef","obstacleRef","jumpSound","Audio","gameOverSound","handleJump","current","play","setTimeout","interval","setInterval","obstacleLeft","getBoundingClientRect","left","rabbitBottom","bottom","window","innerWidth","clearInterval","prev","handleKeyDown","e","code","addEventListener","removeEventListener","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","backgroundImage","animationDuration","Math","max","onClick","_c","$RefreshReg$"],"sources":["D:/React project/rabbit-jump/src/components/RabbitGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./RabbitGame.css\";\r\nimport rabbitImg from \"../assets/rabbit.png\";\r\nimport obstacleImg from \"../assets/obstacle.png\";\r\nimport jumpSoundFile from \"../assets/jump.mp3\";\r\nimport gameOverSoundFile from \"../assets/gameover.mp3\";\r\n\r\nconst RabbitGame = () => {\r\n  const [jumping, setJumping] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const rabbitRef = useRef(null);\r\n  const obstacleRef = useRef(null);\r\n  const jumpSound = useRef(new Audio(jumpSoundFile));\r\n  const gameOverSound = useRef(new Audio(gameOverSoundFile));\r\n\r\n  // Jump action\r\n  const handleJump = () => {\r\n    if (!jumping && !gameOver) {\r\n      setJumping(true);\r\n      jumpSound.current.play();\r\n      setTimeout(() => setJumping(false), 500);\r\n    }\r\n  };\r\n\r\n  // Collision detection & score\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (!rabbitRef.current || !obstacleRef.current) return;\r\n\r\n      const obstacleLeft = obstacleRef.current.getBoundingClientRect().left;\r\n      const rabbitBottom = jumping\r\n        ? rabbitRef.current.getBoundingClientRect().bottom - 50\r\n        : 0;\r\n\r\n      if (obstacleLeft < window.innerWidth * 0.1 && obstacleLeft > 0 && rabbitBottom < 50) {\r\n        gameOverSound.current.play();\r\n        setGameOver(true);\r\n        clearInterval(interval);\r\n      }\r\n\r\n      if (obstacleLeft <= 0 && !gameOver) {\r\n        setScore((prev) => prev + 1);\r\n      }\r\n    }, 50);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [jumping, gameOver]);\r\n\r\n  // Spacebar jump\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.code === \"Space\") handleJump();\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\r\n  });\r\n\r\n  // Reset game\r\n  const resetGame = () => {\r\n    setScore(0);\r\n    setGameOver(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"score\">Score: {score}</div>\r\n\r\n      <div\r\n        ref={rabbitRef}\r\n        className={`rabbit ${jumping ? \"jump\" : \"\"}`}\r\n        style={{ backgroundImage: `url(${rabbitImg})` }}\r\n      ></div>\r\n\r\n      {!gameOver && (\r\n        <div\r\n          ref={obstacleRef}\r\n          className=\"obstacle\"\r\n          style={{\r\n            backgroundImage: `url(${obstacleImg})`,\r\n            animationDuration: `${Math.max(1.2, 2 - score * 0.05)}s`,\r\n          }}\r\n        ></div>\r\n      )}\r\n\r\n      {gameOver && (\r\n        <div className=\"game-over\">\r\n          <h2>Game Over!</h2>\r\n          <p>Your Score: {score}</p>\r\n          <button onClick={resetGame}>Restart</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RabbitGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}