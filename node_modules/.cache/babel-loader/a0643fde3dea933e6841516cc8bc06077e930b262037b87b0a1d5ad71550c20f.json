{"ast":null,"code":"var _jsxFileName = \"D:\\\\React project\\\\rabbit-jump\\\\src\\\\components\\\\RabbitGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./RabbitGame.css\";\nimport rabbitImg from \"../assets/rabbit.png\";\nimport obstacleImg from \"../assets/obstacle.png\";\nimport bgMusic from \"../assets/jump.mp3\";\nimport gameOverSound from \"../assets/gameover.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RabbitGame = () => {\n  _s();\n  const [jumping, setJumping] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const obstacleRef = useRef(null);\n  const rabbitRef = useRef(null);\n  const jumpSound = useRef(new Audio(bgMusic));\n  const overSound = useRef(new Audio(gameOverSound));\n\n  // Handle Jump\n  const handleJump = () => {\n    if (!jumping && !gameOver) {\n      setJumping(true);\n      jumpSound.current.play();\n      setTimeout(() => setJumping(false), 500);\n    }\n  };\n\n  // Collision detection & score\n  useEffect(() => {\n    const checkCollision = setInterval(() => {\n      if (!obstacleRef.current || !rabbitRef.current) return;\n      const obstacleLeft = obstacleRef.current.offsetLeft;\n      const rabbitBottom = jumping ? 150 : 0;\n\n      // Collision logic\n      if (obstacleLeft < 100 && obstacleLeft > 50 && rabbitBottom < 50) {\n        overSound.current.play();\n        setGameOver(true);\n        clearInterval(checkCollision);\n      }\n\n      // Scoring logic\n      if (obstacleLeft <= 0 && !gameOver) {\n        setScore(prev => prev + 1);\n      }\n    }, 50);\n    return () => clearInterval(checkCollision);\n  }, [jumping, gameOver]);\n\n  // Spacebar control\n  useEffect(() => {\n    const onKeyDown = e => {\n      if (e.code === \"Space\") handleJump();\n    };\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => window.removeEventListener(\"keydown\", onKeyDown);\n  });\n\n  // Reset Game\n  const resetGame = () => {\n    setScore(0);\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: rabbitRef,\n      className: `rabbit ${jumping ? \"jump\" : \"\"}`,\n      style: {\n        backgroundImage: `url(${rabbitImg})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: obstacleRef,\n      className: \"obstacle\",\n      style: {\n        backgroundImage: `url(${obstacleImg})`,\n        animationDuration: `${Math.max(1.2, 2 - score * 0.05)}s`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(RabbitGame, \"kNjTD4NaN7nCb9/SLvJbMLbZ6d0=\");\n_c = RabbitGame;\nexport default RabbitGame;\nvar _c;\n$RefreshReg$(_c, \"RabbitGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","rabbitImg","obstacleImg","bgMusic","gameOverSound","jsxDEV","_jsxDEV","RabbitGame","_s","jumping","setJumping","score","setScore","gameOver","setGameOver","obstacleRef","rabbitRef","jumpSound","Audio","overSound","handleJump","current","play","setTimeout","checkCollision","setInterval","obstacleLeft","offsetLeft","rabbitBottom","clearInterval","prev","onKeyDown","e","code","window","addEventListener","removeEventListener","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","backgroundImage","animationDuration","Math","max","onClick","_c","$RefreshReg$"],"sources":["D:/React project/rabbit-jump/src/components/RabbitGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./RabbitGame.css\";\r\nimport rabbitImg from \"../assets/rabbit.png\";\r\nimport obstacleImg from \"../assets/obstacle.png\";\r\nimport bgMusic from \"../assets/jump.mp3\";\r\nimport gameOverSound from \"../assets/gameover.mp3\";\r\n\r\nconst RabbitGame = () => {\r\n  const [jumping, setJumping] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  const obstacleRef = useRef(null);\r\n  const rabbitRef = useRef(null);\r\n\r\n  const jumpSound = useRef(new Audio(bgMusic));\r\n  const overSound = useRef(new Audio(gameOverSound));\r\n\r\n  // Handle Jump\r\n  const handleJump = () => {\r\n    if (!jumping && !gameOver) {\r\n      setJumping(true);\r\n      jumpSound.current.play();\r\n      setTimeout(() => setJumping(false), 500);\r\n    }\r\n  };\r\n\r\n  // Collision detection & score\r\n  useEffect(() => {\r\n    const checkCollision = setInterval(() => {\r\n      if (!obstacleRef.current || !rabbitRef.current) return;\r\n\r\n      const obstacleLeft = obstacleRef.current.offsetLeft;\r\n      const rabbitBottom = jumping ? 150 : 0;\r\n\r\n      // Collision logic\r\n      if (obstacleLeft < 100 && obstacleLeft > 50 && rabbitBottom < 50) {\r\n        overSound.current.play();\r\n        setGameOver(true);\r\n        clearInterval(checkCollision);\r\n      }\r\n\r\n      // Scoring logic\r\n      if (obstacleLeft <= 0 && !gameOver) {\r\n        setScore((prev) => prev + 1);\r\n      }\r\n    }, 50);\r\n\r\n    return () => clearInterval(checkCollision);\r\n  }, [jumping, gameOver]);\r\n\r\n  // Spacebar control\r\n  useEffect(() => {\r\n    const onKeyDown = (e) => {\r\n      if (e.code === \"Space\") handleJump();\r\n    };\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", onKeyDown);\r\n  });\r\n\r\n  // Reset Game\r\n  const resetGame = () => {\r\n    setScore(0);\r\n    setGameOver(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"score\">Score: {score}</div>\r\n\r\n      <div\r\n        ref={rabbitRef}\r\n        className={`rabbit ${jumping ? \"jump\" : \"\"}`}\r\n        style={{ backgroundImage: `url(${rabbitImg})` }}\r\n      ></div>\r\n\r\n      {!gameOver && (\r\n        <div\r\n          ref={obstacleRef}\r\n          className=\"obstacle\"\r\n          style={{\r\n            backgroundImage: `url(${obstacleImg})`,\r\n            animationDuration: `${Math.max(1.2, 2 - score * 0.05)}s`,\r\n          }}\r\n        ></div>\r\n      )}\r\n\r\n      {gameOver && (\r\n        <div className=\"game-over\">\r\n          <h2>Game Over!</h2>\r\n          <p>Your Score: {score}</p>\r\n          <button onClick={resetGame}>Restart</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RabbitGame;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,kBAAkB;AACzB,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMiB,WAAW,GAAGf,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMgB,SAAS,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMiB,SAAS,GAAGjB,MAAM,CAAC,IAAIkB,KAAK,CAACf,OAAO,CAAC,CAAC;EAC5C,MAAMgB,SAAS,GAAGnB,MAAM,CAAC,IAAIkB,KAAK,CAACd,aAAa,CAAC,CAAC;;EAElD;EACA,MAAMgB,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACX,OAAO,IAAI,CAACI,QAAQ,EAAE;MACzBH,UAAU,CAAC,IAAI,CAAC;MAChBO,SAAS,CAACI,OAAO,CAACC,IAAI,CAAC,CAAC;MACxBC,UAAU,CAAC,MAAMb,UAAU,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC;IAC1C;EACF,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACd,MAAMyB,cAAc,GAAGC,WAAW,CAAC,MAAM;MACvC,IAAI,CAACV,WAAW,CAACM,OAAO,IAAI,CAACL,SAAS,CAACK,OAAO,EAAE;MAEhD,MAAMK,YAAY,GAAGX,WAAW,CAACM,OAAO,CAACM,UAAU;MACnD,MAAMC,YAAY,GAAGnB,OAAO,GAAG,GAAG,GAAG,CAAC;;MAEtC;MACA,IAAIiB,YAAY,GAAG,GAAG,IAAIA,YAAY,GAAG,EAAE,IAAIE,YAAY,GAAG,EAAE,EAAE;QAChET,SAAS,CAACE,OAAO,CAACC,IAAI,CAAC,CAAC;QACxBR,WAAW,CAAC,IAAI,CAAC;QACjBe,aAAa,CAACL,cAAc,CAAC;MAC/B;;MAEA;MACA,IAAIE,YAAY,IAAI,CAAC,IAAI,CAACb,QAAQ,EAAE;QAClCD,QAAQ,CAAEkB,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAC9B;IACF,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMD,aAAa,CAACL,cAAc,CAAC;EAC5C,CAAC,EAAE,CAACf,OAAO,EAAEI,QAAQ,CAAC,CAAC;;EAEvB;EACAd,SAAS,CAAC,MAAM;IACd,MAAMgC,SAAS,GAAIC,CAAC,IAAK;MACvB,IAAIA,CAAC,CAACC,IAAI,KAAK,OAAO,EAAEb,UAAU,CAAC,CAAC;IACtC,CAAC;IACDc,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,SAAS,CAAC;IAC7C,OAAO,MAAMG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,SAAS,CAAC;EAC/D,CAAC,CAAC;;EAEF;EACA,MAAMM,SAAS,GAAGA,CAAA,KAAM;IACtBzB,QAAQ,CAAC,CAAC,CAAC;IACXE,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACER,OAAA;IAAKgC,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BjC,OAAA;MAAKgC,SAAS,EAAC,OAAO;MAAAC,QAAA,GAAC,SAAO,EAAC5B,KAAK;IAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE3CrC,OAAA;MACEsC,GAAG,EAAE5B,SAAU;MACfsB,SAAS,EAAE,UAAU7B,OAAO,GAAG,MAAM,GAAG,EAAE,EAAG;MAC7CoC,KAAK,EAAE;QAAEC,eAAe,EAAE,OAAO7C,SAAS;MAAI;IAAE;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,EAEN,CAAC9B,QAAQ,iBACRP,OAAA;MACEsC,GAAG,EAAE7B,WAAY;MACjBuB,SAAS,EAAC,UAAU;MACpBO,KAAK,EAAE;QACLC,eAAe,EAAE,OAAO5C,WAAW,GAAG;QACtC6C,iBAAiB,EAAE,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAGtC,KAAK,GAAG,IAAI,CAAC;MACvD;IAAE;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACP,EAEA9B,QAAQ,iBACPP,OAAA;MAAKgC,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBjC,OAAA;QAAAiC,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBrC,OAAA;QAAAiC,QAAA,GAAG,cAAY,EAAC5B,KAAK;MAAA;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BrC,OAAA;QAAQ4C,OAAO,EAAEb,SAAU;QAAAE,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnC,EAAA,CAzFID,UAAU;AAAA4C,EAAA,GAAV5C,UAAU;AA2FhB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}