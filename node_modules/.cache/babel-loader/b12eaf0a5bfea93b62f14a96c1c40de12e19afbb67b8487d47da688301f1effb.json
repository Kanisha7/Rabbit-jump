{"ast":null,"code":"var _jsxFileName = \"D:\\\\React project\\\\rabbit-jump\\\\src\\\\components\\\\RabbitGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./RabbitGame.css\";\nimport rabbitImg from \"../assets/rabbit.png\";\nimport obstacleImg from \"../assets/obstacle.png\";\nimport jumpSoundFile from \"../assets/jump.mp3\";\nimport gameOverSoundFile from \"../assets/gameover.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RabbitGame = () => {\n  _s();\n  const [jumping, setJumping] = useState(false);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [audioUnlocked, setAudioUnlocked] = useState(false);\n  const rabbitRef = useRef(null);\n  const obstacleRef = useRef(null);\n  const jumpSound = useRef(new Audio(jumpSoundFile));\n  const gameOverSound = useRef(new Audio(gameOverSoundFile));\n\n  // Unlock audio on first interaction\n  useEffect(() => {\n    const unlockAudio = () => {\n      jumpSound.current.play().catch(() => {});\n      jumpSound.current.pause();\n      jumpSound.current.currentTime = 0;\n      gameOverSound.current.play().catch(() => {});\n      gameOverSound.current.pause();\n      gameOverSound.current.currentTime = 0;\n      setAudioUnlocked(true);\n      window.removeEventListener(\"keydown\", unlockAudio);\n      window.removeEventListener(\"touchstart\", unlockAudio);\n    };\n    window.addEventListener(\"keydown\", unlockAudio);\n    window.addEventListener(\"touchstart\", unlockAudio);\n    return () => {\n      window.removeEventListener(\"keydown\", unlockAudio);\n      window.removeEventListener(\"touchstart\", unlockAudio);\n    };\n  }, []);\n\n  // Jump action\n  const handleJump = () => {\n    if (!jumping && !gameOver) {\n      setJumping(true);\n      if (audioUnlocked) jumpSound.current.play().catch(() => {});\n      setTimeout(() => setJumping(false), 500);\n    }\n  };\n\n  // Collision detection and score\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (!rabbitRef.current || !obstacleRef.current) return;\n      const obstacleLeft = obstacleRef.current.offsetLeft;\n      const rabbitBottom = jumping ? 150 : 0;\n      if (obstacleLeft < 100 && obstacleLeft > 50 && rabbitBottom < 50) {\n        if (audioUnlocked) gameOverSound.current.play().catch(() => {});\n        setGameOver(true);\n        clearInterval(interval);\n      }\n      if (obstacleLeft <= 0 && !gameOver) {\n        setScore(prev => prev + 1);\n      }\n    }, 50);\n    return () => clearInterval(interval);\n  }, [jumping, gameOver, audioUnlocked]);\n\n  // Spacebar jump\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === \"Space\") handleJump();\n    };\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Touch support for mobile\n    const handleTouch = () => handleJump();\n    window.addEventListener(\"touchstart\", handleTouch);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      window.removeEventListener(\"touchstart\", handleTouch);\n    };\n  }, [jumping, gameOver, audioUnlocked]);\n\n  // Reset game\n  const resetGame = () => {\n    setScore(0);\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: rabbitRef,\n      className: `rabbit ${jumping ? \"jump\" : \"\"}`,\n      style: {\n        backgroundImage: `url(${rabbitImg})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: obstacleRef,\n      className: \"obstacle\",\n      style: {\n        backgroundImage: `url(${obstacleImg})`,\n        animationDuration: `${Math.max(1.2, 2 - score * 0.05)}s`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(RabbitGame, \"/wV9UqvN4ChOrAZlIF/UE12Jol8=\");\n_c = RabbitGame;\nexport default RabbitGame;\nvar _c;\n$RefreshReg$(_c, \"RabbitGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","rabbitImg","obstacleImg","jumpSoundFile","gameOverSoundFile","jsxDEV","_jsxDEV","RabbitGame","_s","jumping","setJumping","score","setScore","gameOver","setGameOver","audioUnlocked","setAudioUnlocked","rabbitRef","obstacleRef","jumpSound","Audio","gameOverSound","unlockAudio","current","play","catch","pause","currentTime","window","removeEventListener","addEventListener","handleJump","setTimeout","interval","setInterval","obstacleLeft","offsetLeft","rabbitBottom","clearInterval","prev","handleKeyDown","e","code","handleTouch","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","backgroundImage","animationDuration","Math","max","onClick","_c","$RefreshReg$"],"sources":["D:/React project/rabbit-jump/src/components/RabbitGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./RabbitGame.css\";\r\nimport rabbitImg from \"../assets/rabbit.png\";\r\nimport obstacleImg from \"../assets/obstacle.png\";\r\nimport jumpSoundFile from \"../assets/jump.mp3\";\r\nimport gameOverSoundFile from \"../assets/gameover.mp3\";\r\n\r\nconst RabbitGame = () => {\r\n  const [jumping, setJumping] = useState(false);\r\n  const [score, setScore] = useState(0);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [audioUnlocked, setAudioUnlocked] = useState(false);\r\n\r\n  const rabbitRef = useRef(null);\r\n  const obstacleRef = useRef(null);\r\n  const jumpSound = useRef(new Audio(jumpSoundFile));\r\n  const gameOverSound = useRef(new Audio(gameOverSoundFile));\r\n\r\n  // Unlock audio on first interaction\r\n  useEffect(() => {\r\n    const unlockAudio = () => {\r\n      jumpSound.current.play().catch(() => {});\r\n      jumpSound.current.pause();\r\n      jumpSound.current.currentTime = 0;\r\n\r\n      gameOverSound.current.play().catch(() => {});\r\n      gameOverSound.current.pause();\r\n      gameOverSound.current.currentTime = 0;\r\n\r\n      setAudioUnlocked(true);\r\n\r\n      window.removeEventListener(\"keydown\", unlockAudio);\r\n      window.removeEventListener(\"touchstart\", unlockAudio);\r\n    };\r\n\r\n    window.addEventListener(\"keydown\", unlockAudio);\r\n    window.addEventListener(\"touchstart\", unlockAudio);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", unlockAudio);\r\n      window.removeEventListener(\"touchstart\", unlockAudio);\r\n    };\r\n  }, []);\r\n\r\n  // Jump action\r\n  const handleJump = () => {\r\n    if (!jumping && !gameOver) {\r\n      setJumping(true);\r\n      if (audioUnlocked) jumpSound.current.play().catch(() => {});\r\n      setTimeout(() => setJumping(false), 500);\r\n    }\r\n  };\r\n\r\n  // Collision detection and score\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (!rabbitRef.current || !obstacleRef.current) return;\r\n\r\n      const obstacleLeft = obstacleRef.current.offsetLeft;\r\n      const rabbitBottom = jumping ? 150 : 0;\r\n\r\n      if (obstacleLeft < 100 && obstacleLeft > 50 && rabbitBottom < 50) {\r\n        if (audioUnlocked) gameOverSound.current.play().catch(() => {});\r\n        setGameOver(true);\r\n        clearInterval(interval);\r\n      }\r\n\r\n      if (obstacleLeft <= 0 && !gameOver) {\r\n        setScore((prev) => prev + 1);\r\n      }\r\n    }, 50);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [jumping, gameOver, audioUnlocked]);\r\n\r\n  // Spacebar jump\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.code === \"Space\") handleJump();\r\n    };\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    // Touch support for mobile\r\n    const handleTouch = () => handleJump();\r\n    window.addEventListener(\"touchstart\", handleTouch);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n      window.removeEventListener(\"touchstart\", handleTouch);\r\n    };\r\n  }, [jumping, gameOver, audioUnlocked]);\r\n\r\n  // Reset game\r\n  const resetGame = () => {\r\n    setScore(0);\r\n    setGameOver(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-container\">\r\n      <div className=\"score\">Score: {score}</div>\r\n\r\n      <div\r\n        ref={rabbitRef}\r\n        className={`rabbit ${jumping ? \"jump\" : \"\"}`}\r\n        style={{ backgroundImage: `url(${rabbitImg})` }}\r\n      ></div>\r\n\r\n      {!gameOver && (\r\n        <div\r\n          ref={obstacleRef}\r\n          className=\"obstacle\"\r\n          style={{\r\n            backgroundImage: `url(${obstacleImg})`,\r\n            animationDuration: `${Math.max(1.2, 2 - score * 0.05)}s`,\r\n          }}\r\n        ></div>\r\n      )}\r\n\r\n      {gameOver && (\r\n        <div className=\"game-over\">\r\n          <h2>Game Over!</h2>\r\n          <p>Your Score: {score}</p>\r\n          <button onClick={resetGame}>Restart</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RabbitGame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}